# Generated by Django 3.0.10 on 2022-08-05 10:16

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Demand",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                ("month", models.DateTimeField(db_column="MONTH")),
                (
                    "brand",
                    models.CharField(
                        blank=True, db_column="BRAND", max_length=20, null=True
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="GRADE", max_length=20, null=True
                    ),
                ),
                (
                    "pack_type",
                    models.CharField(
                        blank=True, db_column="PACK_TYPE", max_length=20, null=True
                    ),
                ),
                (
                    "cust_category",
                    models.CharField(
                        blank=True, db_column="CUST_CATEGORY", max_length=10, null=True
                    ),
                ),
                (
                    "demand_qty",
                    models.DecimalField(
                        blank=True,
                        db_column="DEMAND_QTY",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
                (
                    "packaging",
                    models.CharField(
                        blank=True, db_column="PACKAGING", max_length=50, null=True
                    ),
                ),
                (
                    "di_perc",
                    models.IntegerField(blank=True, db_column="DI_perc", null=True),
                ),
            ],
            options={
                "db_table": "DEMAND",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FreightMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                ("link_id", models.IntegerField(db_column="LINK_ID")),
                (
                    "primary_frt",
                    models.DecimalField(
                        blank=True,
                        db_column="PRIMARY_FRT",
                        decimal_places=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "secondary_frt",
                    models.DecimalField(
                        blank=True,
                        db_column="SECONDARY_FRT",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "handling_charges",
                    models.DecimalField(
                        blank=True,
                        db_column="HANDLING_CHARGES",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "rake_charges",
                    models.DecimalField(
                        blank=True,
                        db_column="RAKE_CHARGES",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "demurrage",
                    models.DecimalField(
                        blank=True,
                        db_column="DEMURRAGE",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "cust_category",
                    models.CharField(
                        blank=True, db_column="CUST_CATEGORY", max_length=20, null=True
                    ),
                ),
                (
                    "pack_type",
                    models.CharField(db_column="PACK_TYPE", max_length=20, null=True),
                ),
                (
                    "damages",
                    models.DecimalField(
                        blank=True,
                        db_column="DAMAGES",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
                (
                    "notional_freight",
                    models.DecimalField(
                        blank=True,
                        db_column="NOTIONAL_FREIGHT",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "FREIGHT_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GodownMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="NAME", max_length=50, null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, db_column="STATE", max_length=100, null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, db_column="CITY", max_length=100, null=True
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True, db_column="DISTRICT", max_length=100, null=True
                    ),
                ),
                (
                    "capacity",
                    models.CharField(
                        blank=True, db_column="CAPACITY", max_length=20, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="TYPE", max_length=20, null=True
                    ),
                ),
                (
                    "start_time",
                    models.CharField(
                        blank=True, db_column="START_TIME", max_length=20, null=True
                    ),
                ),
                (
                    "end_time",
                    models.CharField(
                        blank=True, db_column="END_TIME", max_length=20, null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "GODOWN_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LinksMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "from_city_id",
                    models.IntegerField(
                        blank=True, db_column="FROM_CITY_ID", null=True
                    ),
                ),
                (
                    "to_city_id",
                    models.IntegerField(blank=True, db_column="TO_CITY_ID", null=True),
                ),
                (
                    "mode",
                    models.CharField(
                        blank=True, db_column="MODE", max_length=20, null=True
                    ),
                ),
                (
                    "distance",
                    models.DecimalField(
                        blank=True,
                        db_column="DISTANCE",
                        decimal_places=5,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, db_column="TYPE", max_length=20, null=True
                    ),
                ),
                (
                    "primary_secondary_route",
                    models.CharField(
                        blank=True,
                        db_column="PRIMARY_SECONDARY_ROUTE",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "source_name",
                    models.CharField(
                        blank=True, db_column="SOURCE_NAME", max_length=500, null=True
                    ),
                ),
                (
                    "source_district",
                    models.CharField(
                        blank=True,
                        db_column="SOURCE_DISTRICT",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "source_city",
                    models.CharField(
                        blank=True, db_column="SOURCE_CITY", max_length=100, null=True
                    ),
                ),
                (
                    "source_state",
                    models.CharField(
                        blank=True, db_column="SOURCE_STATE", max_length=100, null=True
                    ),
                ),
                (
                    "destination_district",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_DISTRICT",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "destination_city",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_CITY",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "destination_state",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_STATE",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "avg_time",
                    models.CharField(
                        blank=True, db_column="AVG_TIME", max_length=50, null=True
                    ),
                ),
                (
                    "route_id",
                    models.IntegerField(blank=True, db_column="ROUTE_ID", null=True),
                ),
                (
                    "active_flag",
                    models.CharField(
                        blank=True, db_column="ACTIVE_FLAG", max_length=50, null=True
                    ),
                ),
                (
                    "plant",
                    models.CharField(
                        blank=True, db_column="PLANT", max_length=200, null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
                (
                    "node_city_id",
                    models.IntegerField(
                        blank=True, db_column="NODE_CITY_ID", null=True
                    ),
                ),
                (
                    "warehouse",
                    models.CharField(
                        blank=True, db_column="WAREHOUSE", max_length=200, null=True
                    ),
                ),
                (
                    "route_id_secondary",
                    models.IntegerField(
                        blank=True, db_column="ROUTE_ID_SECONDARY", null=True
                    ),
                ),
                (
                    "freight_type",
                    models.CharField(
                        blank=True, db_column="FREIGHT_TYPE", max_length=50, null=True
                    ),
                ),
                (
                    "cust_category",
                    models.CharField(
                        blank=True, db_column="CUST_CATEGORY", max_length=50, null=True
                    ),
                ),
                (
                    "pack_type",
                    models.CharField(
                        blank=True, db_column="PACK_TYPE", max_length=50, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "LINKS_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpModelDfFnl",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scenario",
                    models.CharField(
                        blank=True, db_column="SCENARIO", max_length=100, null=True
                    ),
                ),
                (
                    "run_id",
                    models.DecimalField(
                        blank=True,
                        db_column="RUN_ID",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "route_id",
                    models.IntegerField(blank=True, db_column="ROUTE_ID", null=True),
                ),
                (
                    "route_id_secondary",
                    models.IntegerField(
                        blank=True, db_column="ROUTE_ID_SECONDARY", null=True
                    ),
                ),
                (
                    "primary_secondary_route",
                    models.CharField(
                        blank=True,
                        db_column="PRIMARY_SECONDARY_ROUTE",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "plant_id",
                    models.CharField(
                        blank=True, db_column="PLANT_ID", max_length=100, null=True
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="GRADE", max_length=100, null=True
                    ),
                ),
                (
                    "node_city",
                    models.CharField(
                        blank=True, db_column="NODE_CITY", max_length=100, null=True
                    ),
                ),
                (
                    "destination_city",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_CITY",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "destination_district",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_DISTRICT",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "destination_state",
                    models.CharField(
                        blank=True,
                        db_column="DESTINATION_STATE",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "mode",
                    models.CharField(
                        blank=True, db_column="MODE", max_length=100, null=True
                    ),
                ),
                (
                    "cust_category",
                    models.CharField(
                        blank=True, db_column="CUST_CATEGORY", max_length=100, null=True
                    ),
                ),
                (
                    "brand",
                    models.IntegerField(blank=True, db_column="BRAND", null=True),
                ),
                (
                    "pack_type",
                    models.CharField(
                        blank=True, db_column="PACK_TYPE", max_length=100, null=True
                    ),
                ),
                (
                    "packaging",
                    models.CharField(
                        blank=True, db_column="PACKAGING", max_length=100, null=True
                    ),
                ),
                (
                    "freight_type",
                    models.CharField(
                        blank=True, db_column="FREIGHT_TYPE", max_length=100, null=True
                    ),
                ),
                (
                    "price",
                    models.IntegerField(blank=True, db_column="PRICE", null=True),
                ),
                (
                    "primary_frt",
                    models.DecimalField(
                        blank=True,
                        db_column="PRIMARY_FRT",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "secondary_frt",
                    models.DecimalField(
                        blank=True,
                        db_column="SECONDARY_FRT",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="DISCOUNT",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        blank=True,
                        db_column="TAXES",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "misc_charges",
                    models.DecimalField(
                        blank=True,
                        db_column="MISC_CHARGES",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "ha_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="HA_COMMISSION",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "demurrage",
                    models.DecimalField(
                        blank=True,
                        db_column="DEMURRAGE",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "damages",
                    models.DecimalField(
                        blank=True,
                        db_column="DAMAGES",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "rake_charges",
                    models.DecimalField(
                        blank=True,
                        db_column="RAKE_CHARGES",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "sp_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="SP_COMMISSION",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "isp_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="ISP_COMMISSION",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "variable_production_cost",
                    models.DecimalField(
                        blank=True,
                        db_column="VARIABLE_PRODUCTION_COST",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "clinker_plant",
                    models.CharField(
                        blank=True, db_column="CLINKER_PLANT", max_length=100, null=True
                    ),
                ),
                (
                    "clinker_mode",
                    models.CharField(
                        blank=True, db_column="CLINKER_MODE", max_length=100, null=True
                    ),
                ),
                (
                    "clinker_freight",
                    models.CharField(
                        blank=True,
                        db_column="CLINKER_FREIGHT",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "route_changed",
                    models.CharField(
                        blank=True, db_column="ROUTE_CHANGED", max_length=100, null=True
                    ),
                ),
                (
                    "clinker_cf",
                    models.CharField(
                        blank=True, db_column="CLINKER_CF", max_length=100, null=True
                    ),
                ),
                (
                    "contribution",
                    models.CharField(
                        blank=True, db_column="CONTRIBUTION", max_length=100, null=True
                    ),
                ),
                (
                    "qty",
                    models.DecimalField(
                        blank=True,
                        db_column="QTY",
                        decimal_places=2,
                        max_digits=38,
                        null=True,
                    ),
                ),
                (
                    "tlc",
                    models.CharField(
                        blank=True, db_column="TLC", max_length=100, null=True
                    ),
                ),
            ],
            options={
                "db_table": "LP_MODEL_DF_FNL",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpModelRun",
            fields=[
                (
                    "run_id",
                    models.AutoField(
                        db_column="RUN_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "run_date",
                    models.DateTimeField(auto_now_add=True, db_column="RUN_DATE"),
                ),
                (
                    "user",
                    models.CharField(
                        blank=True, db_column="USER", max_length=100, null=True
                    ),
                ),
                (
                    "run_status",
                    models.CharField(
                        blank=True, db_column="RUN_STATUS", max_length=100, null=True
                    ),
                ),
                ("contribution", models.IntegerField(db_column="CONTRIBUTION")),
                (
                    "tlc",
                    models.DecimalField(
                        blank=True,
                        db_column="TLC",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "dmnd_fulfiled",
                    models.DecimalField(
                        blank=True,
                        db_column="DMND_FULFILED",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "direct_dispatch",
                    models.DecimalField(
                        blank=True,
                        db_column="DIRECT_DISPATCH",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "plan_date",
                    models.DateTimeField(blank=True, db_column="PLAN_DATE", null=True),
                ),
                (
                    "run_type",
                    models.CharField(
                        blank=True, db_column="RUN_TYPE", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "LP_MODEL_RUN",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpSchedulingOrderMaster",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_id", models.IntegerField(blank=True, null=True)),
                ("customer_code", models.IntegerField(blank=True, null=True)),
                (
                    "customer_name",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "customer_type",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "order_type",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("brand", models.CharField(blank=True, max_length=1000, null=True)),
                ("grade", models.CharField(blank=True, max_length=1000, null=True)),
                ("packaging", models.CharField(blank=True, max_length=1000, null=True)),
                ("order_date", models.DateTimeField(blank=True, null=True)),
                ("promise_date", models.DateTimeField(blank=True, null=True)),
                ("ship_city", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "ship_district",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "ship_state",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "full_address",
                    models.CharField(blank=True, max_length=8000, null=True),
                ),
                (
                    "original_source",
                    models.CharField(
                        blank=True,
                        db_column="Original_Source",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "original_mode",
                    models.CharField(
                        blank=True,
                        db_column="Original_mode",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("mode", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "plant",
                    models.CharField(
                        blank=True, db_column="Plant", max_length=1000, null=True
                    ),
                ),
                (
                    "order_qty",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "di_generated",
                    models.TextField(blank=True, db_column="DI_Generated", null=True),
                ),
                (
                    "di_number",
                    models.IntegerField(blank=True, db_column="DI_Number", null=True),
                ),
                (
                    "order_executable",
                    models.TextField(
                        blank=True, db_column="Order_Exceutable", null=True
                    ),
                ),
                (
                    "order_clubbed",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("club_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_type",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "vehicle_capacity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                ("self_consumption_flag", models.TextField(blank=True, null=True)),
                (
                    "provisional_ncr",
                    models.DecimalField(
                        blank=True,
                        db_column="Provisional_NCR",
                        decimal_places=0,
                        max_digits=18,
                        null=True,
                    ),
                ),
                (
                    "key_account",
                    models.CharField(
                        blank=True, db_column="Key_Account", max_length=200, null=True
                    ),
                ),
                (
                    "di_generation_date",
                    models.DateTimeField(
                        blank=True, db_column="DI_GENERATION_DATE", null=True
                    ),
                ),
                (
                    "pp_sequece",
                    models.CharField(
                        blank=True, db_column="PP_sequece", max_length=100, null=True
                    ),
                ),
            ],
            options={
                "db_table": "LP_SCHEDULING_ORDER_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpSchedulingPackerConstraints",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plant", models.CharField(blank=True, max_length=1000, null=True)),
                ("packer_no", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "packer_rated_output",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "packer_available",
                    models.BooleanField(
                        blank=True, db_column="Packer_available", null=True
                    ),
                ),
                (
                    "truck_loader_number",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "loader_rated_output",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("loader_available", models.BooleanField(blank=True, null=True)),
                (
                    "packer_planned_downtime",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "loader_planned_downtime",
                    models.DateTimeField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "LP_SCHEDULING_PACKER_CONSTRAINTS",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpSchedulingPlantConstraints",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(blank=True, db_column="Date", null=True)),
                (
                    "plant_id",
                    models.CharField(
                        blank=True, db_column="Plant_id", max_length=100, null=True
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True, db_column="Grade", max_length=100, null=True
                    ),
                ),
                (
                    "capacity",
                    models.DecimalField(
                        blank=True,
                        db_column="Capacity",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "LP_SCHEDULING_PLANT_CONSTRAINTS",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LpSchedulingVehicleConstraints",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("plant", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "vehicle_type",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "vehicle_size",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                ("no_of_vehicles", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "LP_SCHEDULING_VEHICLE_CONSTRAINTS",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PackagingMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "plant_id",
                    models.IntegerField(blank=True, db_column="PLANT_ID", null=True),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True, db_column="BRAND", max_length=50, null=True
                    ),
                ),
                (
                    "product",
                    models.CharField(
                        blank=True, db_column="PRODUCT", max_length=50, null=True
                    ),
                ),
                (
                    "packaging",
                    models.CharField(
                        blank=True, db_column="PACKAGING", max_length=50, null=True
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        db_column="COST",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_column="CREATED_AT", null=True
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "PACKAGING_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PackerConstraintsMaster",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plant_id", models.CharField(db_column="PLANT_ID", max_length=50)),
                ("packer_no", models.CharField(db_column="PACKER_NO", max_length=50)),
                (
                    "packer_capacity",
                    models.DecimalField(
                        db_column="PACKER_CAPACITY", decimal_places=2, max_digits=20
                    ),
                ),
                (
                    "truck_loader_no",
                    models.CharField(db_column="TRUCK_LOADER_NO", max_length=50),
                ),
                ("tl_rated_output", models.IntegerField(db_column="TL_RATED_OUTPUT")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "PACKER_CONSTRAINTS_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PackerShiftConstraint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plant_id", models.CharField(db_column="PLANT_ID", max_length=50)),
                (
                    "rated_output",
                    models.CharField(db_column="RATED_OUTPUT", max_length=50),
                ),
                ("shift", models.CharField(db_column="SHIFT", max_length=50)),
                (
                    "shift_effeciency",
                    models.CharField(db_column="SHIFT_EFFECIENCY", max_length=50),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "PACKER_SHIFT_CONSTRAINT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlantConstraintsMaster",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plant_id", models.CharField(db_column="PLANT_ID", max_length=50)),
                (
                    "railway_siding_available",
                    models.CharField(
                        db_column="RAILWAY_SIDING_AVAILABLE", max_length=100
                    ),
                ),
                (
                    "sididng_inside",
                    models.CharField(db_column="SIDIDNG_INSIDE", max_length=100),
                ),
                (
                    "fiscal_benefit",
                    models.CharField(db_column="FISCAL_BENEFIT", max_length=100),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "PLANT_CONSTRAINTS_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlantProductsMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                ("plant_id", models.CharField(db_column="PLANT_ID", max_length=50)),
                ("grade", models.CharField(db_column="GRADE", max_length=50)),
                (
                    "quantity",
                    models.DecimalField(
                        db_column="QUANTITY", decimal_places=2, max_digits=20
                    ),
                ),
                (
                    "variable_production_cost",
                    models.IntegerField(
                        blank=True, db_column="VARIABLE_PRODUCTION_COST", null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
                (
                    "clinker_cf",
                    models.DecimalField(
                        blank=True,
                        db_column="CLINKER_CF",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "PLANT_PRODUCTS_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PriceMaster",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "cust_category",
                    models.CharField(db_column="CUST_CATEGORY", max_length=50),
                ),
                ("brand", models.CharField(db_column="BRAND", max_length=50)),
                ("grade", models.CharField(db_column="GRADE", max_length=50)),
                ("packaging", models.CharField(db_column="PACKAGING", max_length=50)),
                (
                    "price",
                    models.DecimalField(
                        db_column="PRICE", decimal_places=2, max_digits=20
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
                (
                    "pack_type",
                    models.CharField(
                        blank=True, db_column="PACK_TYPE", max_length=50, null=True
                    ),
                ),
                (
                    "ha_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="HA_COMMISSION",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        db_column="DISCOUNT",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "taxes",
                    models.DecimalField(
                        blank=True,
                        db_column="TAXES",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "sp_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="SP_COMMISSION",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "isp_commission",
                    models.DecimalField(
                        blank=True,
                        db_column="ISP_COMMISSION",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "misc_charges",
                    models.DecimalField(
                        blank=True,
                        db_column="MISC_CHARGES",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "PRICE_MASTER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RouteRestrictions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link_id", models.IntegerField(db_column="LINK_ID")),
                (
                    "max_size",
                    models.DecimalField(
                        blank=True,
                        db_column="MAX_SIZE",
                        decimal_places=2,
                        max_digits=20,
                        null=True,
                    ),
                ),
                ("start_time", models.DateTimeField(db_column="START_TIME")),
                ("end_time", models.DateTimeField(db_column="END_TIME")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "ROUTE_RESTRICTIONS",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceLevelSla",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sla", models.CharField(db_column="SLA", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "SERVICE_LEVEL_SLA",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TOebsSclAddressLink",
            fields=[
                (
                    "dw_t_oebs_scl_address_link_pk",
                    models.IntegerField(
                        db_column="DW_T_OEBS_SCL_ADDRESS_LINK_PK",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, db_column="CITY", max_length=50, null=True
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        blank=True, db_column="DISTRICT", max_length=50, null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, db_column="STATE", max_length=50, null=True
                    ),
                ),
                (
                    "city_id",
                    models.DecimalField(
                        blank=True,
                        db_column="CITY_ID",
                        decimal_places=0,
                        max_digits=10,
                        null=True,
                        unique=True,
                    ),
                ),
            ],
            options={
                "db_table": "T_OEBS_SCL_ADDRESS_LINK",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VehicleAvailability",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plant_id", models.CharField(db_column="PLANT_ID", max_length=50)),
                (
                    "vehicle_type",
                    models.CharField(db_column="VEHICLE_TYPE", max_length=50),
                ),
                ("no_of_vehicles", models.IntegerField(db_column="NO_OF_VEHICLES")),
                (
                    "capacity",
                    models.DecimalField(
                        db_column="CAPACITY", decimal_places=2, max_digits=20
                    ),
                ),
                ("mode", models.CharField(db_column="MODE", max_length=50)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "VEHICLE_AVAILABILITY",
                "managed": False,
            },
        ),
    ]
